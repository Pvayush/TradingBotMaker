{"ast":null,"code":"var _jsxFileName = \"/Users/ayushputhiyavettle/Documents/Coding Projects/TradingBotMaker/frontend/src/components/Bots.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Typography, List, ListItem, ListItemText, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Bots() {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/bots').then(response => {\n      setBots(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching bots:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Existing Bots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: bots.map(bot => /*#__PURE__*/_jsxDEV(ListItem, {\n        divider: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: bot.bot_name,\n          secondary: `Trade Type: ${bot.trade_type} | Created: ${new Date(bot.created_at).toLocaleString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Bots, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = Bots;\nexport default Bots;\nvar _c;\n$RefreshReg$(_c, \"Bots\");","map":{"version":3,"names":["React","useEffect","useState","axios","Typography","List","ListItem","ListItemText","Paper","jsxDEV","_jsxDEV","Bots","_s","bots","setBots","get","then","response","data","catch","error","console","sx","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","bot","divider","primary","bot_name","secondary","trade_type","Date","created_at","toLocaleString","id","_c","$RefreshReg$"],"sources":["/Users/ayushputhiyavettle/Documents/Coding Projects/TradingBotMaker/frontend/src/components/Bots.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Typography, List, ListItem, ListItemText, Paper } from '@mui/material';\n\nfunction Bots() {\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/bots')\n      .then(response => {\n        setBots(response.data);\n      })\n      .catch(error => {\n        console.error(\"Error fetching bots:\", error);\n      });\n  }, []);\n\n  return (\n    <Paper sx={{ padding: 2 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Existing Bots\n      </Typography>\n      <List>\n        {bots.map(bot => (\n          <ListItem key={bot.id} divider>\n            <ListItemText\n              primary={bot.bot_name}\n              secondary={`Trade Type: ${bot.trade_type} | Created: ${new Date(bot.created_at).toLocaleString()}`}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n}\n\nexport default Bots;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACY,GAAG,CAAC,gCAAgC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAI;MAChBH,OAAO,CAACG,QAAQ,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACF,KAAK;IAACc,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACxBd,OAAA,CAACN,UAAU;MAACqB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbpB,OAAA,CAACL,IAAI;MAAAmB,QAAA,EACFX,IAAI,CAACkB,GAAG,CAACC,GAAG,iBACXtB,OAAA,CAACJ,QAAQ;QAAc2B,OAAO;QAAAT,QAAA,eAC5Bd,OAAA,CAACH,YAAY;UACX2B,OAAO,EAAEF,GAAG,CAACG,QAAS;UACtBC,SAAS,EAAE,eAAeJ,GAAG,CAACK,UAAU,eAAe,IAAIC,IAAI,CAACN,GAAG,CAACO,UAAU,CAAC,CAACC,cAAc,CAAC,CAAC;QAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpG;MAAC,GAJWE,GAAG,CAACS,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ;AAAClB,EAAA,CA9BQD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAgCb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}