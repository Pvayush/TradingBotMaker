{"ast":null,"code":"var _jsxFileName = \"/Users/ayushputhiyavettle/Documents/Coding Projects/TradingBotMaker/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Typography, Card, CardContent, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/bots').then(response => {\n      setBots(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching bots:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      children: \"Bot performance metrics (dummy data for now)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: bots.map(bot => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: bot.bot_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: [\"Trade type: \", bot.trade_type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Created at: \", new Date(bot.created_at).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Typography","Card","CardContent","Grid","jsxDEV","_jsxDEV","Dashboard","_s","bots","setBots","get","then","response","data","catch","error","console","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","bot","item","xs","sm","md","bot_name","trade_type","Date","created_at","toLocaleString","id","_c","$RefreshReg$"],"sources":["/Users/ayushputhiyavettle/Documents/Coding Projects/TradingBotMaker/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Typography, Card, CardContent, Grid } from '@mui/material';\n\nfunction Dashboard() {\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/bots')\n      .then(response => {\n        setBots(response.data);\n      })\n      .catch(error => {\n        console.error(\"Error fetching bots:\", error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <Typography variant=\"h4\" gutterBottom>\n        Dashboard\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        Bot performance metrics (dummy data for now)\n      </Typography>\n      <Grid container spacing={2}>\n        {bots.map(bot => (\n          <Grid item xs={12} sm={6} md={4} key={bot.id}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\">{bot.bot_name}</Typography>\n                <Typography variant=\"subtitle1\">\n                  Trade type: {bot.trade_type}\n                </Typography>\n                <Typography variant=\"body2\">\n                  Created at: {new Date(bot.created_at).toLocaleString()}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}